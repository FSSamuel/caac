"""
Django settings for DjangoWebProject project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@87(a$z_dcr5m81=3#gp7!7qk&(iff_1zjjwp^#o(le6#0lpts'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '.loca.lt', "https://mytestapp123.loca.lt"]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'DjangoWebApp',
    "django_ckeditor_5",
    'ckeditor_uploader',
    'crispy_forms',
    'crispy_bootstrap5',
    'embed_video',
    'captcha',
    'django_extensions',
    'sslserver',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



# CKEditor Settings
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = "pillow"  
CKEDITOR_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js' 


CKEDITOR_RESTRICT_BY_USER = True  
CKEDITOR_BROWSE_SHOW_DIRS = True  


ROOT_URLCONF = 'DjangoWebProject.urls'

import os

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoWebProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]




CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

STRIPE_PUBLIC_KEY = '6357676786mnnurehhdyynneyt'
STRIPE_SECRET_KEY = 'up0u6uenmyute56787kmm8765667'




# For SendGrid:
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'apikey'  
EMAIL_HOST_PASSWORD = 'REMOVED' 
EMAIL_USE_TLS = True


import os

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_PASSWORD = 'landon00brezzy@300'
EMAIL_HOST_USER = 'caac1332@gmail.com'  # Your Gmail
EMAIL_HOST_PASSWORD = 'abcd efgh ijkl mnop'  # App password here
DEFAULT_FROM_EMAIL = 'CAAC Church <caac1332@gmail.com>'


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LOGIN_URL = '/login/'  # URL name of your login view
LOGIN_REDIRECT_URL = '/forum/'  # Where to redirect after login
LOGOUT_REDIRECT_URL = '/forum/'  # Where to redirect after logout


APPEND_SLASH = False

CSRF_TRUSTED_ORIGINS = [
    "https://mytestapp123.loca.lt"
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFLIES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DEBUG = True



import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')









# --- Render host allowlist (auto) ---
import os as _os
_render_host = _os.getenv("RENDER_EXTERNAL_HOSTNAME")  # e.g. caac-2.onrender.com
if _render_host:
    try:
        ALLOWED_HOSTS  # type: ignore[name-defined]
    except NameError:
        ALLOWED_HOSTS = []
    try:
        CSRF_TRUSTED_ORIGINS  # type: ignore[name-defined]
    except NameError:
        CSRF_TRUSTED_ORIGINS = []

    if "localhost" not in ALLOWED_HOSTS: ALLOWED_HOSTS.append("localhost")
    if "127.0.0.1" not in ALLOWED_HOSTS: ALLOWED_HOSTS.append("127.0.0.1")
    if _render_host not in ALLOWED_HOSTS: ALLOWED_HOSTS.append(_render_host)

    # trust *.onrender.com and the exact host
    if "https://*.onrender.com" not in CSRF_TRUSTED_ORIGINS:
        CSRF_TRUSTED_ORIGINS.append("https://*.onrender.com")
    exact = f"https://{_render_host}"
    if exact not in CSRF_TRUSTED_ORIGINS:
        CSRF_TRUSTED_ORIGINS.append(exact)
# --- end Render block ---
